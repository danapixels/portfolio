# Production Dockerfile
FROM node:18-alpine AS base

# Set working directory
WORKDIR /app

# Copy package files
COPY client/package*.json ./client/
COPY server/package*.json ./server/

# Install ALL dependencies (including dev dependencies for building)
RUN npm ci --prefix ./client && npm ci --prefix ./server

# Copy source code
COPY client/ ./client/
COPY server/ ./server/

# Build client for production
RUN cd client && npm run build

# Remove dev dependencies to reduce image size
RUN cd client && npm prune --production
RUN cd server && npm prune --production

# Production stage
FROM node:18-alpine AS production

# Install nginx and create necessary directories
RUN apk add --no-cache nginx && \
    mkdir -p /etc/nginx/ssl /var/log/nginx /var/cache/nginx /run/nginx /var/lib/nginx/tmp

# Set working directory
WORKDIR /app

# Copy built client files
COPY --from=base /app/client/dist /usr/share/nginx/html

# Copy server files and node_modules
COPY --from=base /app/server /app/server
COPY --from=base /app/server/node_modules /app/server/node_modules

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create startup script
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'nginx' >> /start.sh && \
    echo 'cd /app/server' >> /start.sh && \
    echo 'exec node server.js' >> /start.sh && \
    chmod +x /start.sh

# Expose ports
EXPOSE 80 443

# Start nginx and server as root
CMD ["/start.sh"]